---
import Icon from "./Icon.astro";

interface Link {
  text: string;
  href: string;
}

const { name, positions, extras } = Astro.props.details;

const names = name.split(" ");
const first = names.slice(0, names.length - 1).join(" ") + " ";
const last = names.slice(names.length - 1);
---

<header class="main-header">
  <span class="name">{first}<span>{last}</span></span>
  <span class="positions">{positions.map((p: String) => <span>{p}</span>)}</span
  >
  <span class="extras">
    {
      Object.entries(extras).map(
        ([icon, { text, href }]) =>
          text &&
          href && (
            <span>
              <>
              <span class="icon">
                <Icon icon={icon} /></span>
                <a href={href}>{text}</a>
              </>
            </span>
          )
      )
    }
  </span>
</header>

<style>
  header.main-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4pt;

    margin-top: -0.15cm;
    margin-bottom: 15px;

    font-family: var(--headerFontFamily);
    font-size: var(--headerFontSize);
  }

  .name {
    font-size: var(--headerNameFontSize);
    font-weight: var(--fontWeightLight);
    color: var(--colorText);
  }

  .name > span {
    color: var(--colorLightText);
    font-weight: var(--fontWeightBold);
  }

  .positions {
    display: flex;
    flex-direction: row;
    gap: var(--headerPositionsGap);

    font-size: var(--headerPositionsFontSize);
    color: var(--colorHighlight);
    text-transform: uppercase;
  }

  .positions span:not(:first-child):before {
    content: "Â·";
    padding-right: var(--headerPositionsGap);
  }

  .extras {
    display: flex;
    flex-direction: row;
  }

  .extras > span {
    display: flex;
    align-items: center;
    gap: calc(var(--headerExtrasGap) / 2);
  }

  .extras > span:not(:first-child):before {
    content: "|";
    margin-left: calc(var(--headerExtrasGap) / 2);
    margin-right: calc(var(--headerExtrasGap) / 4);
  }

  .icon {
    display: flex;
    align-items: center;
    width: 13px;
    height: 13px;

    svg {
      width: 100%;
    }
  }
</style>
